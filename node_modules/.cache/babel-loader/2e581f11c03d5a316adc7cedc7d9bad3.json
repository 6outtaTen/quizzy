{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesq\\\\Documents\\\\React\\\\quizzy\\\\src\\\\components\\\\answer types\\\\SingleAnswerView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuiz } from '../../contexts/ContextProvider';\nimport { useQuestions } from '../../contexts/ContextProvider';\nimport { useQuizChange } from '../../contexts/ContextProvider';\nimport { useChange } from '../../contexts/ContextProvider';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SingleAnswerView(props) {\n  _s();\n\n  const handleChange = useChange();\n  const quizData = useQuiz();\n  const handleQuizChange = useQuizChange();\n  const questionData = useQuestions();\n  let val = \"\"; // const [questionData, setQuestionData] = useState(\n  //     {\n  //         question: \"\",\n  //         answerType: \"\",\n  //         correctAnswer: \"\",\n  //         answer1: \"\",\n  //         answer2: \"\",\n  //         answer3: \"\",\n  //         answer4: \"\",\n  //         answer5: \"\",\n  //         answer6: \"\"\n  //     }\n  // )\n  // function handleQuizDataChange(questionData) {\n  //     setQuizData(prevQuizData => {\n  //         return {\n  //             ...prevQuizData,\n  //             questions: [...prevQuizData.questions, questionData]\n  //         }\n  //     })\n  // }\n  // function handleChange(event) {\n  //     const {name, value} = event.target\n  //     console.log(\"Something changed\")\n  //     setQuestionData(prevQuestionData => {\n  //         return {\n  //             ...prevQuestionData,\n  //             [name]: value\n  //         }\n  //     })\n  //     handleQuizDataChange(questionData)\n  // }\n\n  console.log(quizData);\n\n  switch (props.name) {\n    case \"answer1\":\n      val = questionData.answer1;\n      break;\n\n    case \"answer2\":\n      val = questionData.answer2;\n      break;\n\n    case \"answer3\":\n      val = questionData.answer3;\n      break;\n\n    case \"answer4\":\n      val = questionData.answer4;\n      break;\n\n    case \"answer5\":\n      val = questionData.answer5;\n      break;\n\n    case \"answer6\":\n      val = questionData.answer6;\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-[80%] h-[30px] text-center text-white bg-transparent border-2 outline-none resize-none border-special-pink\",\n      placeholder: props.placeholder,\n      name: props.name,\n      onChange: handleChange,\n      value: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleAnswerView, \"YQRWPTccYnHtLJUCUjWRuCgwHjc=\", false, function () {\n  return [useChange, useQuiz, useQuizChange, useQuestions];\n});\n\n_c = SingleAnswerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleAnswerView\");","map":{"version":3,"sources":["C:/Users/cesq/Documents/React/quizzy/src/components/answer types/SingleAnswerView.js"],"names":["React","useQuiz","useQuestions","useQuizChange","useChange","useState","SingleAnswerView","props","handleChange","quizData","handleQuizChange","questionData","val","console","log","name","answer1","answer2","answer3","answer4","answer5","answer6","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAG5C,QAAMC,YAAY,GAAGJ,SAAS,EAA9B;AACA,QAAMK,QAAQ,GAAGR,OAAO,EAAxB;AACA,QAAMS,gBAAgB,GAAGP,aAAa,EAAtC;AACA,QAAMQ,YAAY,GAAGT,YAAY,EAAjC;AACA,MAAIU,GAAG,GAAG,EAAV,CAP4C,CAS5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAEA,UAAQF,KAAK,CAACQ,IAAd;AACI,SAAK,SAAL;AACIH,MAAAA,GAAG,GAACD,YAAY,CAACK,OAAjB;AACA;;AACJ,SAAK,SAAL;AACIJ,MAAAA,GAAG,GAACD,YAAY,CAACM,OAAjB;AACA;;AACJ,SAAK,SAAL;AACIL,MAAAA,GAAG,GAACD,YAAY,CAACO,OAAjB;AACA;;AACJ,SAAK,SAAL;AACIN,MAAAA,GAAG,GAACD,YAAY,CAACQ,OAAjB;AACA;;AACJ,SAAK,SAAL;AACIP,MAAAA,GAAG,GAACD,YAAY,CAACS,OAAjB;AACA;;AACJ,SAAK,SAAL;AACIR,MAAAA,GAAG,GAACD,YAAY,CAACU,OAAjB;AACA;;AACJ;AACI;AApBR;;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AACI,MAAA,SAAS,EAAC,8GADd;AAEI,MAAA,WAAW,EAAEd,KAAK,CAACe,WAFvB;AAGI,MAAA,IAAI,EAAEf,KAAK,CAACQ,IAHhB;AAII,MAAA,QAAQ,EAAEP,YAJd;AAKI,MAAA,KAAK,EAAEI;AALX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA5FuBN,gB;UAGCF,S,EACJH,O,EACQE,a,EACJD,Y;;;KANDI,gB","sourcesContent":["import React from 'react';\r\nimport { useQuiz } from '../../contexts/ContextProvider';\r\nimport { useQuestions } from '../../contexts/ContextProvider';\r\nimport { useQuizChange } from '../../contexts/ContextProvider';\r\nimport { useChange } from '../../contexts/ContextProvider';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function SingleAnswerView(props) {\r\n\r\n\r\n    const handleChange = useChange();\r\n    const quizData = useQuiz();\r\n    const handleQuizChange = useQuizChange();\r\n    const questionData = useQuestions();\r\n    let val = \"\";\r\n\r\n    // const [questionData, setQuestionData] = useState(\r\n    //     {\r\n    //         question: \"\",\r\n    //         answerType: \"\",\r\n    //         correctAnswer: \"\",\r\n    //         answer1: \"\",\r\n    //         answer2: \"\",\r\n    //         answer3: \"\",\r\n    //         answer4: \"\",\r\n    //         answer5: \"\",\r\n    //         answer6: \"\"\r\n    //     }\r\n    // )\r\n    \r\n\r\n    // function handleQuizDataChange(questionData) {\r\n    //     setQuizData(prevQuizData => {\r\n    //         return {\r\n    //             ...prevQuizData,\r\n    //             questions: [...prevQuizData.questions, questionData]\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n\r\n    // function handleChange(event) {\r\n    //     const {name, value} = event.target\r\n        \r\n    //     console.log(\"Something changed\")\r\n\r\n    //     setQuestionData(prevQuestionData => {\r\n    //         return {\r\n    //             ...prevQuestionData,\r\n    //             [name]: value\r\n    //         }\r\n    //     })\r\n\r\n    //     handleQuizDataChange(questionData)\r\n    // }\r\n\r\n\r\n\r\n\r\n    console.log(quizData)\r\n\r\n    switch (props.name) {\r\n        case \"answer1\":\r\n            val=questionData.answer1\r\n            break;\r\n        case \"answer2\":\r\n            val=questionData.answer2\r\n            break;\r\n        case \"answer3\":\r\n            val=questionData.answer3\r\n            break;\r\n        case \"answer4\":\r\n            val=questionData.answer4\r\n            break;\r\n        case \"answer5\":\r\n            val=questionData.answer5\r\n            break;\r\n        case \"answer6\":\r\n            val=questionData.answer6\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <textarea\r\n                className=\"w-[80%] h-[30px] text-center text-white bg-transparent border-2 outline-none resize-none border-special-pink\"\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n                onChange={handleChange}\r\n                value={val}                    \r\n            >  \r\n            </textarea>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}