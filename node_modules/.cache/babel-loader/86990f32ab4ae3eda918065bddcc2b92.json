{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesq\\\\Documents\\\\React\\\\quizzy\\\\src\\\\components\\\\QuestionView.js\",\n    _s = $RefreshSig$();\n\nimport { filterProps } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionView() {\n  _s();\n\n  const quizTitle = JSON.parse(localStorage.getItem(\"title\"))[0];\n  const quizDescription = JSON.parse(localStorage.getItem(\"description\"))[0];\n  const [quizData, setQuizData] = useState({\n    title: quizTitle,\n    description: quizDescription,\n    questions: []\n  });\n  const [questionData, setQuestionData] = useState({\n    question: \"\",\n    answerType: \"\",\n    correctAnswer: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    answer4: \"\",\n    answer5: \"\",\n    answer6: \"\"\n  });\n\n  function handleQuizDataChange(questionData) {\n    setQuizData(prevQuizData => {\n      return { ...prevQuizData,\n        questions: [...prevQuizData.questions, questionData]\n      };\n    });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setQuestionData(prevQuestionData => {\n      return {\n        [name]: value\n      };\n    });\n    handleQuizDataChange(questionData);\n  }\n\n  if (questionData.answerType == \"\") return;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-special-black w-[80%] h-[200px] rounded-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        name: \"header\",\n        className: \"flex text-white items-center justify-between border-b-2 border-special-gray h-[50px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          name: \"question-count\",\n          className: \"font-bold ml-[15px] mt-[5px]\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"trash\",\n          className: \"fa fa-trash white-color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        name: \"body\",\n        className: \"flex h-[calc(100%-50px)] w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          name: \"left-col\",\n          className: \"flex w-[30%] items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-[90%] ml-[30px] h-[60px] text-white bg-transparent border-2 outline-none resize-none border-special-pink\",\n            placeholder: \"Enter question title\",\n            name: \"question\",\n            onChange: handleChange,\n            value: questionData.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          name: \"center-col\",\n          className: \"flex w-[30%] items-center justify-center flex-col\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"ml-[5%] p-0 h-[22.5px] w-[60%] text-center outline-none\",\n            onChange: handleChange,\n            name: \"answerType\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose the answer type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Single choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"multiple\",\n              children: \"Multiple choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"text\",\n              children: \"Text answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          name: \"right col\",\n          className: \"flex w-[40%]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuestionView, \"jiOEM4RiBd3CcXALVCOr9wEQ04g=\");\n\n_c = QuestionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionView\");","map":{"version":3,"sources":["C:/Users/cesq/Documents/React/quizzy/src/components/QuestionView.js"],"names":["filterProps","React","useState","QuestionView","quizTitle","JSON","parse","localStorage","getItem","quizDescription","quizData","setQuizData","title","description","questions","questionData","setQuestionData","question","answerType","correctAnswer","answer1","answer2","answer3","answer4","answer5","answer6","handleQuizDataChange","prevQuizData","handleChange","event","name","value","target","prevQuestionData"],"mappings":"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","sourcesContent":["import { filterProps } from 'framer-motion'\r\nimport React, {useState} from 'react'\r\n\r\nexport default function QuestionView() {\r\n    \r\n    const quizTitle = JSON.parse(localStorage.getItem(\"title\"))[0]\r\n    const quizDescription = JSON.parse(localStorage.getItem(\"description\"))[0]\r\n\r\n    const [quizData, setQuizData] = useState(\r\n        {\r\n            title: quizTitle,\r\n            description: quizDescription,\r\n            questions: []\r\n        }\r\n    )\r\n    \r\n    const [questionData, setQuestionData] = useState(\r\n        {\r\n            question: \"\",\r\n            answerType: \"\",\r\n            correctAnswer: \"\",\r\n            answer1: \"\",\r\n            answer2: \"\",\r\n            answer3: \"\",\r\n            answer4: \"\",\r\n            answer5: \"\",\r\n            answer6: \"\"\r\n        }\r\n    )\r\n\r\n    \r\n    function handleQuizDataChange(questionData) {\r\n        setQuizData(prevQuizData => {\r\n            return {\r\n                ...prevQuizData,\r\n                questions: [...prevQuizData.questions, questionData]\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target\r\n        \r\n        setQuestionData(prevQuestionData => {\r\n            return {\r\n                [name]: value\r\n            }\r\n        })\r\n\r\n        handleQuizDataChange(questionData)\r\n    }\r\n\r\n    if (questionData.answerType == \"\") return\r\n    \r\n\r\n    return (\r\n        <>\r\n            <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'></link>  \r\n            <div className=\"bg-special-black w-[80%] h-[200px] rounded-2xl\">\r\n\r\n                <div name=\"header\" className=\"flex text-white items-center justify-between border-b-2 border-special-gray h-[50px]\">\r\n                    <span name=\"question-count\" className=\"font-bold ml-[15px] mt-[5px]\">1</span>\r\n                    <i id=\"trash\" className=\"fa fa-trash white-color\"></i>\r\n                </div>\r\n\r\n                <div name=\"body\" className=\"flex h-[calc(100%-50px)] w-full\">\r\n                    <div name=\"left-col\" className=\"flex w-[30%] items-center\">\r\n                        <textarea\r\n                            className=\"w-[90%] ml-[30px] h-[60px] text-white bg-transparent border-2 outline-none resize-none border-special-pink\"\r\n                            placeholder=\"Enter question title\"\r\n                            name=\"question\"\r\n                            onChange={handleChange}\r\n                            value={questionData.question}\r\n                        />\r\n                    </div>\r\n\r\n                    <div name=\"center-col\" className=\"flex w-[30%] items-center justify-center flex-col\">\r\n\r\n                        {/* <span className=\"text-white text-[23px] ml-[3%] mt-[4%] mb-[9%]\">Answer type</span> */}\r\n\r\n\r\n                        <select\r\n                            className=\"ml-[5%] p-0 h-[22.5px] w-[60%] text-center outline-none\"\r\n                            onChange={handleChange} \r\n                            name=\"answerType\"\r\n                        >\r\n                            <option value=\"\">Choose the answer type</option>\r\n                            <option value=\"single\">Single choice</option>\r\n                            <option value=\"multiple\">Multiple choice</option>\r\n                            <option value=\"text\">Text answer</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div name=\"right col\" className=\"flex w-[40%]\">\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}